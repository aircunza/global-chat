services:
  # ------------ Factory config ------------- #

  Contexts.auth.domain.AuthRepository:
    factory:
      class: ../../../contexts/auth/infrastructure/persistence/AuthRepositoryFactory
      method: createRepository
    arguments: ["postgresql"] ## you can change it to other database that has been implemented

  # --------- Available repositories --------- #

  Contexts.auth.infrastructure.persistence.PostgresqlRepository:
    class: ../../../contexts/auth/infrastructure/persistence/postgresql/PostgresqlRepository

  # ------------  Login ------------- #
  Contexts.auth.application.useCases.FindUserByEmail:
    class: ../../../contexts/auth/application/useCases/FindUserByEmail
    arguments: ["@Contexts.auth.domain.AuthRepository"]

  Contexts.auth.application.services.LoginService:
    class: ../../../contexts/auth/application/services/LoginService
    arguments: ["@Contexts.auth.application.useCases.FindUserByEmail"]

  Apps.auth.controllers.LoginCtrl:
    class: ../controllers/LoginCtrl
    arguments: ["@Contexts.auth.application.services.LoginService"]

  # ------------  SignUp ------------- #

  Contexts.auth.application.useCases.FindUserById:
    class: ../../../contexts/auth/application/useCases/FindUserById
    arguments: ["@Contexts.auth.domain.AuthRepository"]

  Contexts.auth.application.useCases.SaveUser:
    class: ../../../contexts/auth/application/useCases/SaveUser
    arguments: ["@Contexts.auth.domain.AuthRepository"]

  Contexts.auth.application.services.SignUpService:
    class: ../../../contexts/auth/application/services/SignUpService
    arguments:
      [
        "@Contexts.auth.application.useCases.SaveUser",
        "@Contexts.auth.application.useCases.FindUserByEmail",
        "@Contexts.auth.application.useCases.FindUserById",
      ]
  Apps.auth.controllers.SingUpCtrl:
    class: ../controllers/SingUpCtrl
    arguments: ["@Contexts.auth.application.services.SignUpService"]

  ##imports:
  ##  - {resource: ./apps/application.yaml}
